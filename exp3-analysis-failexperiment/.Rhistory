geom_gitter(alpha=0.5)
print(p)
?geom_smooth
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
facet_wrap(~ condition) +
geom_gitter(alpha=10) +
geom_smooth(aes(ymin = lcl, ymax = ucl), data=grid, stat="identity")
print(p)
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
facet_wrap(~ condition) +
geom_jitter(alpha=0.5) +
geom_smooth(aes(ymin = lcl, ymax = ucl), data=grid, stat="identity")
print(p)
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(aes(ymin = lcl, ymax = ucl), data=grid, stat="identity") +
facet_wrap(~ condition) +
geom_jitter(alpha=0.5)
print(p)
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition) +
geom_jitter(alpha=0.5)
print(p)
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition) +
geom_jitter(alpha=1)
print(p)
?anova
?lm
extreme = data[data$condition == "extreme",]
fit = lm(extreme$response ~ extreme$object * extreme$logprob)
print(anova(fit))
fit = lm(response ~ object * logprob, data=extreme)
print(anova(fit))
fit = lm(response ~ object * logprob, data=extreme)
fit = lm(response ~ object * log_prob, data=extreme)
print(anova(fit))
library(ggplot2)
total_1grams = 1024908267229
degree_adverbs = read.table("degree-adverbs-exp3.csv", header=T, sep=",")
print(degree_adverbs)
degree_adverbs$log_prob = log(degree_adverbs$count) / log(total_1grams)
degree_adverbs$sort_order = as.numeric(as.factor(degree_adverbs$log_prob))
degree_adverbs$adverb = with(degree_adverbs, factor(adverb, levels=adverb[sort_order]))
p = ggplot(degree_adverbs, aes(x=sort_order, y=log_prob, colour=adverb)) +
geom_point() +
geom_text(aes(label=adverb), angle=(180+135), hjust=-0.1, size=3) +
xlab("") +
ylab("log probability of adverb") +
ylim(0.2, 0.71) +
theme_bw()  +
theme(legend.position="none")
print(p)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3.tsv", header=T, sep="\t")
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
extreme = data[data$condition == "extreme",]
fit = lm(response ~ object * log_prob, data=extreme)
print(anova(fit))
fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(anova(fit))
average = data[data$condition == "average",]
average_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(anova(average_fit))
?facet_grid
?facet_grid
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3.tsv", header=T, sep="\t")
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
data = data[data$object != "laptop"]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
library(ggplot2)
total_1grams = 1024908267229
degree_adverbs = read.table("degree-adverbs-exp3.csv", header=T, sep=",")
print(degree_adverbs)
degree_adverbs$log_prob = log(degree_adverbs$count) / log(total_1grams)
degree_adverbs$sort_order = as.numeric(as.factor(degree_adverbs$log_prob))
degree_adverbs$adverb = with(degree_adverbs, factor(adverb, levels=adverb[sort_order]))
p = ggplot(degree_adverbs, aes(x=sort_order, y=log_prob, colour=adverb)) +
geom_point() +
geom_text(aes(label=adverb), angle=(180+135), hjust=-0.1, size=3) +
xlab("") +
ylab("log probability of adverb") +
ylim(0.2, 0.71) +
theme_bw()  +
theme(legend.position="none")
print(p)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3.tsv", header=T, sep="\t")
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
data = data[data$object != "laptop"]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
extreme = data[data$condition == "extreme",]
extreme_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(anova(extreme_fit))
average = data[data$condition == "average",]
average_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(anova(average_fit))
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3.tsv", header=T, sep="\t")
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
data = data[data$object != "laptop",]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
extreme = data[data$condition == "extreme",]
extreme_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(anova(extreme_fit))
average = data[data$condition == "average",]
average_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(anova(average_fit))
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3.tsv", header=T, sep="\t")
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
data = data[data$object != "laptop" & data$object != "coffee maker",]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3.tsv", header=T, sep="\t")
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
data = data[data$object != "sweater",]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
extreme = data[data$condition == "extreme",]
extreme_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(anova(extreme_fit))
average = data[data$condition == "average",]
average_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(anova(average_fit))
extreme_fit
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
ylim(0,2000) +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
library(ggplot2)
total_1grams = 1024908267229
degree_adverbs = read.table("degree-adverbs-exp3.csv", header=T, sep=",")
print(degree_adverbs)
degree_adverbs$log_prob = log(degree_adverbs$count) / log(total_1grams)
degree_adverbs$sort_order = as.numeric(as.factor(degree_adverbs$log_prob))
degree_adverbs$adverb = with(degree_adverbs, factor(adverb, levels=adverb[sort_order]))
p = ggplot(degree_adverbs, aes(x=sort_order, y=log_prob, colour=adverb)) +
geom_point() +
geom_text(aes(label=adverb), angle=(180+135), hjust=-0.1, size=3) +
xlab("") +
ylab("log probability of adverb") +
ylim(0.2, 0.71) +
theme_bw()  +
theme(legend.position="none")
print(p)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
ylim(0,2000) +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
extreme = data[data$condition == "extreme",]
extreme_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(anova(extreme_fit))
average = data[data$condition == "average",]
average_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(anova(average_fit))
p = ggplot(data, aes(x=(1-log_prob), y=response, colour=object)) +
geom_point() +
ylim(0,2000) +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
p = ggplot(data, aes(x=(-log_prob+1), y=response, colour=object)) +
geom_point() +
ylim(0,2000) +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=(1-log_prob), y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
extreme = data[data$condition == "extreme",]
extreme_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(extreme_fit)
print(anova(extreme_fit))
average = data[data$condition == "average",]
average_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(average_fit)
print(anova(average_fit))
?subset
extreme_laptop = subset(data, condition == "extreme" & object == "laptop")
extreme_laptop
library(ggplot2)
total_1grams = 1024908267229
degree_adverbs = read.table("degree-adverbs-exp3.csv", header=T, sep=",")
print(degree_adverbs)
degree_adverbs$log_prob = log(degree_adverbs$count) / log(total_1grams)
degree_adverbs$sort_order = as.numeric(as.factor(degree_adverbs$log_prob))
degree_adverbs$adverb = with(degree_adverbs, factor(adverb, levels=adverb[sort_order]))
p = ggplot(degree_adverbs, aes(x=sort_order, y=log_prob, colour=adverb)) +
geom_point() +
geom_text(aes(label=adverb), angle=(180+135), hjust=-0.1, size=3) +
xlab("") +
ylab("log probability of adverb") +
ylim(0.2, 0.71) +
theme_bw()  +
theme(legend.position="none")
print(p)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
extreme_laptop = subset(data, condition == "extreme" & object == "laptop")
extreme_laptop = subset(data, condition == "extreme" & object == "laptop")
extreme_laptop_fit = lm(response ~ log_prob, data=extreme_laptop)
print(extreme_laptop_fit)
print(anova(extreme_laptop_fit))
extreme_headphones = subset(data, condition == "extreme" & object == "headphones")
extreme_headphones_fit = lm(response ~ log_prob, data=extreme_headphones)
print(extreme_headphones_fit)
print(anova(extreme_headphones_fit))
extreme_sweater = subset(data, condition == "extreme" & object == "sweater")
extreme_sweater_fit = lm(response ~ log_prob, data=extreme_sweater)
print(extreme_sweater_fit)
print(anova(extreme_sweater_fit))
extreme_coffee = subset(data, condition == "extreme" & object == "coffee maker")
extreme_coffee_fit = lm(response ~ log_prob, data=extreme_coffee)
print(extreme_coffee_fit)
print(anova(extreme_coffee_fit))
average_laptop = subset(data, condition == "average" & object == "laptop")
average_laptop_fit = lm(response ~ log_prob, data=average_laptop)
print(average_laptop_fit)
print(anova(average_laptop_fit))
average_headphones = subset(data, condition == "average" & object == "headphones")
average_headphones_fit = lm(response ~ log_prob, data=average_headphones)
print(average_headphones_fit)
print(anova(average_headphones_fit))
average_sweater = subset(data, condition == "average" & object == "sweater")
average_sweater_fit = lm(response ~ log_prob, data=average_sweater)
print(average_sweater_fit)
print(anova(average_sweater_fit))
average_coffee = subset(data, condition == "average" & object == "coffee maker")
average_coffee_fit = lm(response ~ log_prob, data=average_coffee)
print(average_coffee_fit)
print(anova(average_coffee_fit))
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data2$workerid = data2$workerid + nrow(data1)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data2$workerid = data2$workerid + nrow(data1)
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition", "comments")]
data = data[data$comments != "?"]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
data = data[data$response <= 10000000,]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
reasonable_worker = function(workerid) {
sum(data[data$workerid == workerid && data$response > 10000000,]) == 0
}
data = data[sapply(unique(as.character(workerid)), reasonable_worker),]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
extreme = data[data$condition == "extreme",]
extreme_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(extreme_fit)
print(anova(extreme_fit))
average = data[data$condition == "average",]
average_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(average_fit)
print(anova(average_fit))
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data2$workerid = data2$workerid + nrow(data1)
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
reasonable_worker = function(workerid) {
sum(data[data$workerid == workerid && data$response > 10000000,]) == 0
}
data = data[sapply(unique(as.character(data$workerid)), reasonable_worker),]
sapply(unique(as.character(data$workerid)), reasonable_worker)
unique(as.character(data$workerid))
data[sapply(unique(data$workerid), reasonable_worker),]
unique(data$workerid)
sapply(unique(data$workerid), reasonable_worker)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data2$workerid = data2$workerid + nrow(data1)
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
reasonable_worker = function(workerid) {
nrow(data[data$workerid == workerid && data$response > 10000000,]) == 0
}
data = data[sapply(unique(data$workerid), reasonable_worker),]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
library(ggplot2)
total_1grams = 1024908267229
degree_adverbs = read.table("degree-adverbs-exp3.csv", header=T, sep=",")
print(degree_adverbs)
degree_adverbs$log_prob = log(degree_adverbs$count) / log(total_1grams)
degree_adverbs$sort_order = as.numeric(as.factor(degree_adverbs$log_prob))
degree_adverbs$adverb = with(degree_adverbs, factor(adverb, levels=adverb[sort_order]))
p = ggplot(degree_adverbs, aes(x=sort_order, y=log_prob, colour=adverb)) +
geom_point() +
geom_text(aes(label=adverb), angle=(180+135), hjust=-0.1, size=3) +
xlab("") +
ylab("log probability of adverb") +
ylim(0.2, 0.71) +
theme_bw()  +
theme(legend.position="none")
print(p)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data2$workerid = data2$workerid + nrow(data1)
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
reasonable_worker = function(workerid) {
nrow(data[data$workerid == workerid && data$response > 10000000,]) == 0
}
data = data[sapply(unique(data$workerid), reasonable_worker),]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
reasonable_worker = function(workerid) {
nrow(data[data$workerid == workerid && data$response > 10000000,]) == 0
}
data = data[sapply(data$workerid, reasonable_worker),]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
reasonable_worker = function(workerid) {
return(nrow(data[data$workerid == workerid && data$response > 1000000,]) == 0)
}
reasonable_worker(1)
reasonable_worker(100)
sapply(data$workerid, reasonable_worker)
data$response > 100000
data = data[sapply(as.character(data$workerid), reasonable_worker),]
nrow(data)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data2$workerid = data2$workerid + nrow(data1)
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
reasonable_worker = function(workerid) {
return(nrow(data[data$workerid == workerid && data$response > 100000,]) == 0)
}
data = data[sapply(as.character(data$workerid), reasonable_worker),]
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
data = data[data$workerid != 190,]
nrow(data)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data2$workerid = data2$workerid + nrow(data1)
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
nrow(data)
data = data[data$workerid != 190 + length(data1),]
nrow(data)
data = subset(data, workerid != (190+length(data1)))
nrow(data)
nrow(data1)
240+190
data = subset(data, workerid != 430))
data = subset(data, workerid != 430)
nrow(data)
data1 = read.table("exp3.tsv", header=T, sep="\t")
data2 = read.table("exp3-moremoney.tsv", header=T, sep="\t")
data2$workerid = data2$workerid + nrow(data1)
data = rbind(data1, data2)[,c("workerid", "adverb", "object", "response", "condition")]
data = subset(data, workerid != 430)
data$log_prob = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$log_prob[as.character(degree_adverbs$adverb) == adverb])})
data$syllables = sapply(as.character(data$adverb), function(adverb) {return(degree_adverbs$syllables[as.character(degree_adverbs$adverb) == adverb])})
p = ggplot(data, aes(x=log_prob, y=response, colour=object)) +
geom_point() +
geom_smooth(method="lm", se=T) +
facet_wrap(~ condition)
print(p)
extreme = data[data$condition == "extreme",]
extreme_fit = lm(response ~ object * log_prob * syllables, data=extreme)
print(extreme_fit)
print(anova(extreme_fit))
average = data[data$condition == "average",]
average_fit = lm(response ~ object * log_prob * syllables, data=average)
print(average_fit)
print(anova(average_fit))
for (object in c("laptop", "sweater", "headphones", "coffee maker")) {
subdata = subset(data, object == object)
print(cor(subdata$response, data$log_prob))
}
fit = lm(response ~ object * log_prob * syllables, data=data)
print(fit)
print(anova(fit))
for (object in c("laptop", "sweater", "headphones", "coffee maker")) {
subdata = subset(data, object == object)
print(cor(subdata$response, subdata$log_prob))
}
for (object in c("laptop", "sweater", "headphones", "coffee maker")) {
subdata = data[data$object == object]
print(cor(subdata$response, subdata$log_prob))
}
for (object in c("laptop", "sweater", "headphones", "coffee maker")) {
subdata = data[data$object == object,]
print(cor(subdata$response, subdata$log_prob))
}
object = "laptop"
subdata = data[data$object == object,]
subdata
source("~/opt/r_helper_scripts/bootsSummary.r")
data_summary = bootsSummary(data=data, measurevar=response, grouvars=c(object, adverb, syllables))
data_summary = bootsSummary(data=data, measurevar=response, groupvars=c(object, adverb, syllables))
data_summary = bootsSummary(data=data, measurevar=response, groupvars=c("object", "adverb", "syllables"))
response
data_summary = bootsSummary(data=data, measurevar="response", groupvars=c("object", "adverb", "syllables"))
data_summary
data_summary = bootsSummary(data=data, measurevar="response", groupvars=c("object", "adverb", "syllables"))
for (object in c("laptop", "sweater", "headphones", "coffee maker")) {
subdata = data_summary[data_summary$object == object,]
print(cor(subdata$response, subdata$log_prob))
}
subdata
data_summary = bootsSummary(data=data, measurevar="response", groupvars=c("object", "adverb", "syllables", "log_prob"))
for (object in c("laptop", "sweater", "headphones", "coffee maker")) {
subdata = data_summary[data_summary$object == object,]
print(cor(subdata$response, subdata$log_prob))
}
